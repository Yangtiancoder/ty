{"remainingRequest":"/Users/tianyang/Downloads/ty/node_modules/babel-loader/lib/index.js!/Users/tianyang/Downloads/ty/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tianyang/Downloads/ty/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tianyang/Downloads/ty/src/views/Predict.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tianyang/Downloads/ty/src/views/Predict.vue","mtime":1606148926607},{"path":"/Users/tianyang/Downloads/ty/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tianyang/Downloads/ty/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tianyang/Downloads/ty/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tianyang/Downloads/ty/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGZpbGVMaXN0OiBbXSwKICAgICAgbG9jYWxGaWxlTGlzdDogW10sCiAgICAgIHNob3dGaWxlTGlzdDogdHJ1ZSwKICAgICAgbG9hZGluZzogdHJ1ZQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICB0YWJsZURhdGE6IGZ1bmN0aW9uIHRhYmxlRGF0YSgpIHsKICAgICAgcmV0dXJuIHRoaXMubG9hZGluZyA/IFtdIDogdGhpcy5sb2NhbEZpbGVMaXN0Lm1hcChmdW5jdGlvbiAoZmlsZSwgaW5kZXgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgaW5kZXg6IGluZGV4ICsgMSwKICAgICAgICAgIG5hbWU6IGZpbGUubmFtZS5zcGxpdCgiLiIpWzBdLAogICAgICAgICAgdXJsOiBmaWxlLnVybCwKICAgICAgICAgIGlzQ292aWQxOTogZmlsZS5uYW1lLnRvTG93ZXJDYXNlKCkuaW5kZXhPZigiY292aWQiKSA+PSAwCiAgICAgICAgfTsKICAgICAgfSk7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBoYW5kbGVQcmV2aWV3OiBmdW5jdGlvbiBoYW5kbGVQcmV2aWV3KGZpbGUsIGZpbGVMaXN0KSB7CiAgICAgIGNvbnNvbGUubG9nKGZpbGVMaXN0KTsKICAgICAgd2luZG93Lm9wZW4oZmlsZSA9PT0gbnVsbCB8fCBmaWxlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBmaWxlLnVybCwgIl9ibGFuayIpOwogICAgfSwKICAgIGhhbmRsZVJlbW92ZTogZnVuY3Rpb24gaGFuZGxlUmVtb3ZlKGZpbGUpIHsKICAgICAgdGhpcy5sb2NhbEZpbGVMaXN0ID0gdGhpcy5sb2NhbEZpbGVMaXN0LmZpbHRlcihmdW5jdGlvbiAoZkwpIHsKICAgICAgICByZXR1cm4gZmlsZS51cmwgIT09IGZMLnVybDsKICAgICAgfSk7CiAgICB9LAogICAgaGFuZGxlVXBkYXRlOiBmdW5jdGlvbiBoYW5kbGVVcGRhdGUoZmlsZSkgewogICAgICB0aGlzLnNob3dGaWxlTGlzdCA9IHRydWU7CiAgICAgIHRoaXMubG9jYWxGaWxlTGlzdC5wdXNoKGZpbGUpOwogICAgfSwKICAgIGRvUHJlZGljdDogZnVuY3Rpb24gZG9QcmVkaWN0KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy5zaG93RmlsZUxpc3QgPSBmYWxzZTsKICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZTsKICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICB9LCAxMDAwKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["Predict.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,EADA;AAEA,MAAA,aAAA,EAAA,EAFA;AAGA,MAAA,YAAA,EAAA,IAHA;AAIA,MAAA,OAAA,EAAA;AAJA,KAAA;AAMA,GARA;AASA,EAAA,QAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,aAAA,KAAA,OAAA,GAAA,EAAA,GAAA,KAAA,aAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA,KAAA;AAAA,eAAA;AACA,UAAA,KAAA,EAAA,KAAA,GAAA,CADA;AAEA,UAAA,IAAA,EAAA,IAAA,CAAA,IAAA,CAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAFA;AAGA,UAAA,GAAA,EAAA,IAAA,CAAA,GAHA;AAIA,UAAA,SAAA,EAAA,IAAA,CAAA,IAAA,CAAA,WAAA,GAAA,OAAA,CAAA,OAAA,KAAA;AAJA,SAAA;AAAA,OAAA,CAAA;AAMA;AARA,GATA;AAmBA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,yBACA,IADA,EACA,QADA,EACA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,QAAA;AACA,MAAA,MAAA,CAAA,IAAA,CAAA,IAAA,aAAA,IAAA,uBAAA,IAAA,CAAA,GAAA,EAAA,QAAA;AACA,KAJA;AAKA,IAAA,YALA,wBAKA,IALA,EAKA;AACA,WAAA,aAAA,GAAA,KAAA,aAAA,CAAA,MAAA,CACA,UAAA,EAAA;AAAA,eAAA,IAAA,CAAA,GAAA,KAAA,EAAA,CAAA,GAAA;AAAA,OADA,CAAA;AAGA,KATA;AAUA,IAAA,YAVA,wBAUA,IAVA,EAUA;AACA,WAAA,YAAA,GAAA,IAAA;AACA,WAAA,aAAA,CAAA,IAAA,CAAA,IAAA;AACA,KAbA;AAcA,IAAA,SAdA,uBAcA;AAAA;;AACA,WAAA,YAAA,GAAA,KAAA;AACA,WAAA,OAAA,GAAA,IAAA;AACA,MAAA,UAAA,CAAA,YAAA;AACA,QAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AACA,OAFA,EAEA,IAFA,CAAA;AAIA;AArBA;AAnBA,CAAA","sourcesContent":["<template>\n  <div class=\"predict\">\n    <p class=\"title\">基于深度学习的新冠肺炎医学影像预测</p>\n    <p class=\"en-title\">Prediction Covid-19 in CT based on DeepLearning</p>\n    <el-upload\n      class=\"upload\"\n      action=\"https://jsonplaceholder.typicode.com/posts/\"\n      :on-preview=\"handlePreview\"\n      :on-remove=\"handleRemove\"\n      :on-change=\"handleUpdate\"\n      list-type=\"picture\"\n      :auto-upload=\"false\"\n      :show-file-list=\"showFileList\"\n      multiple\n    >\n      <el-button size=\"small\" type=\"primary\" >批量上传</el-button>\n      <el-button size=\"small\" type=\"success\" @click.stop=\"doPredict\" :disabled=\"localFileList.length===0\">预测</el-button>\n    </el-upload>\n\n    <div class=\"report-list\" v-if=\"!showFileList\">\n      <p class=\"title\">报告结果</p>\n      <el-table :data=\"tableData\" stripe style=\"width: 90%\" border v-loading=\"loading\">\n        <el-table-column prop=\"index\" label=\"序列\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"name\" label=\"名称\" align=\"center\"></el-table-column>\n        <el-table-column label=\"预览\" width=\"400\" align=\"center\">\n          <template slot-scope=\"scope\">\n            <img :src=\"scope.row.url\" style=\"height: 90px\">\n          </template>\n        </el-table-column>\n        <el-table-column label=\"新冠肺炎结果\" align=\"center\">\n          <template slot-scope=\"scope\">\n            <span v-if=\"scope.row.isCovid19\" style=\"color:red\">阳性</span>\n            <span v-else>阴性</span>\n          </template>\n        </el-table-column>\n      </el-table>\n      <p style=\"color:#888; marginTop:30px\">报告结果-结束</p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      fileList: [],\n      localFileList: [],\n      showFileList: true,\n      loading: true,\n    };\n  },\n  computed: {\n    tableData() {\n      return this.loading ? [] : this.localFileList.map((file, index) => ({\n        index: index + 1,\n        name: file.name.split(\".\")[0],\n        url: file.url,\n        isCovid19:file.name.toLowerCase().indexOf(\"covid\") >=0\n      }));\n    },\n  },\n  methods: {\n    handlePreview(file, fileList) {\n      console.log(fileList);\n      window.open(file?.url, \"_blank\");\n    },\n    handleRemove(file) {\n      this.localFileList = this.localFileList.filter(\n        (fL) => file.url !== fL.url\n      );\n    },\n    handleUpdate(file) {\n      this.showFileList = true\n      this.localFileList.push(file);\n    },\n    doPredict(){\n      this.showFileList = false\n      this.loading = true\n      setTimeout(()=>{\n        this.loading=false\n      },1000)\n\n    }\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n.predict {\n  margin: 0 auto;\n  width: 100%;\n//   border: 1px solid red;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  .title {\n    font-size: 25px;\n    font-weight: 600;\n  }\n  .en-title{\n      font-size: 20px;\n      font-weight: 200;\n      margin-bottom: 60px;\n  }\n}\n.report-list {\n  width: 70%;\n  border: 3px solid black;\n  background-color: #fff;\n  border-radius: 10px;\n  margin: 40px 0;\n//   min-height: 600px;\n  padding: 10px 50px 10px 50px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n</style>\n\n<style lang=\"less\">\n.el-upload-list {\n  display: flex;\n  flex-wrap: wrap;\n  margin: 20px 0;\n  width: 70vw;\n//   border: 1px solid green;\n  min-height: 200px;\n\n  .el-upload-list__item {\n    margin: 10px 20px!important;\n    width: 300px !important;\n  }\n}\n\n</style>\n"],"sourceRoot":"src/views"}]}